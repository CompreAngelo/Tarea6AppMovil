{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UniversityScreen = function UniversityScreen() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    universities = _useState2[0],\n    setUniversities = _useState2[1];\n  useEffect(function () {\n    fetch('http://universities.hipolabs.com/search?country=Dominican+Republic').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setUniversities(data);\n    }).catch(function (error) {\n      console.log(error);\n      setUniversities([]);\n    });\n  }, []);\n  var openWebsite = function openWebsite(url) {\n    Linking.openURL(url);\n  };\n  var renderUniversityItem = function renderUniversityItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return openWebsite(item.web_pages[0]);\n      },\n      children: _jsxs(View, {\n        style: {\n          marginBottom: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: item.name\n        }), _jsxs(Text, {\n          children: [\"Domain: \", item.domains[0]]\n        }), _jsxs(Text, {\n          children: [\"Website: \", item.web_pages[0]]\n        })]\n      })\n    });\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: universities.length > 0 ? _jsx(FlatList, {\n      data: universities,\n      renderItem: renderUniversityItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      }\n    }) : _jsx(Text, {\n      children: \"No se encontraron universidades\"\n    })\n  });\n};\nexport default UniversityScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","Linking","jsx","_jsx","jsxs","_jsxs","UniversityScreen","_useState","_useState2","_slicedToArray","universities","setUniversities","fetch","then","response","json","data","catch","error","console","log","openWebsite","url","openURL","renderUniversityItem","_ref","item","onPress","web_pages","children","style","marginBottom","fontWeight","name","domains","flex","padding","length","renderItem","keyExtractor"],"sources":["/Users/macbookpro2015/Desktop/navigation-app/screens/UniversityScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity, Linking } from 'react-native';\r\n\r\nconst UniversityScreen = () => {\r\n  const [universities, setUniversities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://universities.hipolabs.com/search?country=Dominican+Republic')\r\n      .then(response => response.json())\r\n      .then(data => setUniversities(data))\r\n      .catch(error => {\r\n        console.log(error);\r\n        setUniversities([]);\r\n      });\r\n  }, []);\r\n\r\n  const openWebsite = url => {\r\n    Linking.openURL(url);\r\n  };\r\n\r\n  const renderUniversityItem = ({ item }) => {\r\n    return (\r\n      <TouchableOpacity onPress={() => openWebsite(item.web_pages[0])}>\r\n        <View style={{ marginBottom: 10 }}>\r\n          <Text style={{ fontWeight: 'bold' }}>{item.name}</Text>\r\n          <Text>Domain: {item.domains[0]}</Text>\r\n          <Text>Website: {item.web_pages[0]}</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 16 }}>\r\n      {universities.length > 0 ? (\r\n        <FlatList\r\n          data={universities}\r\n          renderItem={renderUniversityItem}\r\n          keyExtractor={item => item.name}\r\n        />\r\n      ) : (\r\n        <Text>No se encontraron universidades</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default UniversityScreen;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,OAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAGnD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;EAC7B,IAAAC,SAAA,GAAwCX,QAAQ,CAAC,EAAE,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EAEpCb,SAAS,CAAC,YAAM;IACdiB,KAAK,CAAC,oEAAoE,CAAC,CACxEC,IAAI,CAAC,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACjCF,IAAI,CAAC,UAAAG,IAAI;MAAA,OAAIL,eAAe,CAACK,IAAI,CAAC;IAAA,EAAC,CACnCC,KAAK,CAAC,UAAAC,KAAK,EAAI;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClBP,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMU,WAAW,GAAG,SAAdA,WAAWA,CAAGC,GAAG,EAAI;IACzBrB,OAAO,CAACsB,OAAO,CAACD,GAAG,CAAC;EACtB,CAAC;EAED,IAAME,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAAC,IAAA,EAAiB;IAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;IAClC,OACEvB,IAAA,CAACH,gBAAgB;MAAC2B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,WAAW,CAACK,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC,CAAC;MAAA,CAAC;MAAAC,QAAA,EAC9DxB,KAAA,CAACR,IAAI;QAACiC,KAAK,EAAE;UAAEC,YAAY,EAAE;QAAG,CAAE;QAAAF,QAAA,GAChC1B,IAAA,CAACL,IAAI;UAACgC,KAAK,EAAE;YAAEE,UAAU,EAAE;UAAO,CAAE;UAAAH,QAAA,EAAEH,IAAI,CAACO;QAAI,CAAO,CAAC,EACvD5B,KAAA,CAACP,IAAI;UAAA+B,QAAA,GAAC,UAAQ,EAACH,IAAI,CAACQ,OAAO,CAAC,CAAC,CAAC;QAAA,CAAO,CAAC,EACtC7B,KAAA,CAACP,IAAI;UAAA+B,QAAA,GAAC,WAAS,EAACH,IAAI,CAACE,SAAS,CAAC,CAAC,CAAC;QAAA,CAAO,CAAC;MAAA,CACrC;IAAC,CACS,CAAC;EAEvB,CAAC;EAED,OACEzB,IAAA,CAACN,IAAI;IAACiC,KAAK,EAAE;MAAEK,IAAI,EAAE,CAAC;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAP,QAAA,EACnCnB,YAAY,CAAC2B,MAAM,GAAG,CAAC,GACtBlC,IAAA,CAACJ,QAAQ;MACPiB,IAAI,EAAEN,YAAa;MACnB4B,UAAU,EAAEd,oBAAqB;MACjCe,YAAY,EAAE,SAAAA,aAAAb,IAAI;QAAA,OAAIA,IAAI,CAACO,IAAI;MAAA;IAAC,CACjC,CAAC,GAEF9B,IAAA,CAACL,IAAI;MAAA+B,QAAA,EAAC;IAA+B,CAAM;EAC5C,CACG,CAAC;AAEX,CAAC;AAED,eAAevB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}