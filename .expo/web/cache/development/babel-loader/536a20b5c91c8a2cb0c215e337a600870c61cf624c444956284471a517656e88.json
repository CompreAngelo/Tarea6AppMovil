{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UniversityScreen = function UniversityScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    country = _useState2[0],\n    setCountry = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    universities = _useState4[0],\n    setUniversities = _useState4[1];\n  useEffect(function () {\n    if (country) {\n      fetch(\"http://universities.hipolabs.com/search?country=\" + encodeURIComponent(country)).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return setUniversities(data);\n      }).catch(function (error) {\n        console.log(error);\n        setUniversities([]);\n      });\n    }\n  }, [country]);\n  var openWebsite = function openWebsite(url) {\n    Linking.openURL(url);\n  };\n  var renderUniversityItem = function renderUniversityItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return openWebsite(item.web_pages[0]);\n      },\n      children: _jsxs(View, {\n        style: {\n          marginBottom: 10\n        },\n        children: [_jsx(Text, {\n          style: {\n            fontWeight: 'bold'\n          },\n          children: item.name\n        }), _jsxs(Text, {\n          children: [\"Domain: \", item.domains[0]]\n        }), _jsxs(Text, {\n          children: [\"Website: \", item.web_pages[0]]\n        })]\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1,\n      padding: 16\n    },\n    children: [_jsx(TextInput, {\n      style: {\n        height: 40,\n        width: 200,\n        borderColor: 'gray',\n        borderWidth: 1,\n        marginBottom: 20\n      },\n      placeholder: \"Ingrese el nombre del pa\\xEDs\",\n      onChangeText: function onChangeText(text) {\n        return setCountry(text);\n      },\n      value: country\n    }), _jsx(Button, {\n      title: \"Buscar universidades\",\n      onPress: function onPress() {\n        return setCountry(country);\n      }\n    }), universities.length > 0 ? _jsx(FlatList, {\n      data: universities,\n      renderItem: renderUniversityItem,\n      keyExtractor: function keyExtractor(item) {\n        return item.name;\n      }\n    }) : _jsx(Text, {\n      children: \"No se encontraron universidades\"\n    })]\n  });\n};\nexport default UniversityScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","TouchableOpacity","TextInput","Button","Linking","jsx","_jsx","jsxs","_jsxs","UniversityScreen","_useState","_useState2","_slicedToArray","country","setCountry","_useState3","_useState4","universities","setUniversities","fetch","encodeURIComponent","then","response","json","data","catch","error","console","log","openWebsite","url","openURL","renderUniversityItem","_ref","item","onPress","web_pages","children","style","marginBottom","fontWeight","name","domains","flex","padding","height","width","borderColor","borderWidth","placeholder","onChangeText","text","value","title","length","renderItem","keyExtractor"],"sources":["C:/Users/HP/Desktop/tarea6/navigation-app/screens/UniversityScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, FlatList, TouchableOpacity, TextInput, Button, Linking } from 'react-native';\r\n\r\nconst UniversityScreen = () => {\r\n  const [country, setCountry] = useState('');\r\n  const [universities, setUniversities] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (country) {\r\n      fetch(`http://universities.hipolabs.com/search?country=${encodeURIComponent(country)}`)\r\n        .then(response => response.json())\r\n        .then(data => setUniversities(data))\r\n        .catch(error => {\r\n          console.log(error);\r\n          setUniversities([]);\r\n        });\r\n    }\r\n  }, [country]);\r\n\r\n  const openWebsite = url => {\r\n    Linking.openURL(url);\r\n  };\r\n\r\n  const renderUniversityItem = ({ item }) => {\r\n    return (\r\n      <TouchableOpacity onPress={() => openWebsite(item.web_pages[0])}>\r\n        <View style={{ marginBottom: 10 }}>\r\n          <Text style={{ fontWeight: 'bold' }}>{item.name}</Text>\r\n          <Text>Domain: {item.domains[0]}</Text>\r\n          <Text>Website: {item.web_pages[0]}</Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1, padding: 16 }}>\r\n      <TextInput\r\n        style={{ height: 40, width: 200, borderColor: 'gray', borderWidth: 1, marginBottom: 20 }}\r\n        placeholder=\"Ingrese el nombre del paÃ­s\"\r\n        onChangeText={text => setCountry(text)}\r\n        value={country}\r\n      />\r\n      <Button\r\n        title=\"Buscar universidades\"\r\n        onPress={() => setCountry(country)}\r\n      />\r\n\r\n      {universities.length > 0 ? (\r\n        <FlatList\r\n          data={universities}\r\n          renderItem={renderUniversityItem}\r\n          keyExtractor={item => item.name}\r\n        />\r\n      ) : (\r\n        <Text>No se encontraron universidades</Text>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default UniversityScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}